2021-12-26  Ola Jeppsson  <ola.jeppsson@gmail.com>

	* config/epiphany/epiphany.md (define_expand "casesi"): Remove
	unneeded operand to emit_cmp_and_jump_insns().
	(define_insn "casesi_load"): Fix cast of operand to rtx_insn.
	* config/epiphany/epiphany.c: Include "cfgrtl.h".
	(epiphany_expand_prologue): Remove VOIDmode argument to
	gen_rtx_SET.

2019-03-24  Ola Jeppsson  <ola@adapteva.com>

	* config/epiphany/epiphany.opt (fsoftware-cache): Add missing
	dot in description. Fixes a testcase.

2016-11-08  Ola Jeppsson  <ola@adapteva.com>

	* config/epiphany/epiphany.md (define_constants)
	<UNSPECV_BLOCKAGE>: New constant.
	(blockage): New define_insn.
	* config/epiphany/epiphany.opt (mno-sched-prolog): New option.
	Default to allow scheduling in prologue.
	* config/epiphany/epiphany.c (epiphany_expand_prologue): Emit
	blockage if TARGET_NO_SCHED_PROLOG is set.

2016-04-04  Ola Jeppsson  <ola@adapteva.com>

	* config/epiphany/epiphany.h (CALL_USED_REGISTERS): Make
	r32-r43 caller-saved.

2015-11-02  Ola Jeppsson  <ola@adapteva.com>

	* config/epiphany/epiphany.c (emit_set_fp_mode): If
	gen_save_config is emitted, insert it right after prologue.

2015-09-04  Ola Jeppsson  <ola@adapteva.com>

	* testsuite/g++.dg/pr49718.C: Add special pattern for
	Epiphany, mov is split into low and high part.
	* testsuite/gcc.target/epiphany/interrupt-2.c: Fix function
	name regex.
	* testsuite/gcc.target/epiphany/interrupt.c: Likewise.
	* testsuite/gcc.target/epiphany/pop-1.c (int f): Fix type to
	avoid warning.

2015-09-03  Ola Jeppsson  <ola@adapteva.com>

	* config/epiphany/epiphany.h: Enable
	DWARF2_ASM_LINE_DEBUG_INFO.

2015-08-29  Ola Jeppsson  <ola@adapteva.com>

	* config/epiphany/epiphany.c (epiphany_start_function):
	Emit function type directive. Emit type and size directive for
	forwarder functions.

2015-08-28  Ola Jeppsson  <ola@adapteva.com>

	* gcc/config/epiphany/epiphany.h: Enable -mno-soft-cmpsf under
	-ffast-math.
	* gcc/doc/invoke.texi: Document.

2015-08-27  Ola Jeppsson  <ola@adapteva.com>

	* config/epiphany/epiphany.h: Change USER_LABEL_PREFIX
	from "_" to "". Consistent with binutils and most elf targets.

2015-08-27  Ola Jeppsson  <ola@adapteva.com>

	* gcc/config/epiphany/epiphany.h: Move "fp" to register 15
	* gcc/config/epiphany/epiphany.md (GPR_FP): Change to 15

2014-12-12  Simon Cook  <simon.cook@embecosm.com>

	* config/epiphany/epiphany.h (ENDFILE_SPEC): Add cachemanager.o
	when -fpic is used.

2014-12-12  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.md (casesi_load): Use next_nonnote_insn to
	find jump_table_data insn.

2013-10-31  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.md (stack_adjust_addfp, stack_adjust_mov):
	Don't hard code frame pointer name, but find it from reg_names.

2014-09-25  Simon Cook  <simon.cook@embecosm.com>

	* config/epiphany/epiphany.h (EPIPHANY_LIBRARY_EXTRA_SPEC): Don't
	build libraries with -fpic by default.
	* config/epiphany/epiphany.opt: Fix CC1 warning when
	-fsoftware-cache enabled.

2014-09-23  Simon Cook  <simon.cook@embecosm.com>

	* config/epiphany/epiphany.h (ENDFILE_SPEC): Add cachemanager.o
	when -fsoftware-cache is used.
	(CC1_SPEC): Add -fpic when -fsoftware-cache is used.
	* config/epiphany/epiphany.opt: New option.

2014-05-30  Pierre Langlois  <pierre.langlois@embecosm.com>

	* config/epiphany/epiphany.h (EPIPHANY_LIBRARY_EXTRA_SPEC): Build
	libraries with -fpic.

2014-05-28  Pierre Langlois  <pierre.langlois@embecosm.com>

	* config/epiphany/epiphany.md (GPR_FP): Change to 11.

+2014-04-03  Joern Rennecke  <joern.rennecke@embecosm.com>

gcc:
	* config/epiphany/epiphany.c (epiphany_expand_epilogue): Don't move
	stack adjustment offset into a register unless we have to.
gcc/testsuite:
	* gcc.target/epiphany/pop-1.c: New test.

2013-09-03  Simon Cook  <simon.cook@embecosm.com>

	* config/epiphany/epiphany.h (EPIPHANY_LIBRARY_EXTRA_SPEC): Don't
	build libraries with -fpic for now.
	(ASM_OUTPUT_SYMBOL_REF): Enable and only use @PLT for functions.

2013-08-08  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.c (epiphany_expand_epilogue): Avoid
	unsigned calculation for frame_adjust.

2013-08-13  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/predicates.md (pcrel_operand): New predicate.
	(move_src_operand): Exclude pcrel_operand for flag_pic.
	(nonsymbolic_immediate_operand): Rename to ..
	(nonpcrel_immediate_operand) .. this.  Changed all users.
	Exclude pcrel_operand.
	* config/epiphany/constraints.md (Clb): New constraint.
	* config/epiphany/epiphany.h (ASM_OUTPUT_ADDR_DIFF_ELT):
	Use mode of BODY.
	(CASE_VECTOR_SHORTEN_MODE): Define.
	* config/epiphany/epiphany.md (UNSPEC_CASESI): New constant.
	(mov<mode>) <SImode>: Use gen_movsi_pcrel.
	(movsi_pcrel, movsi_pcrel_r, movsi_pcrel_r+[12]): New patterns.
	(tablejump_internal): Emit expander.
	(casesi, casesi_load): New patterns.
	* config/epiphany/epiphany.c (epiphany_secondary_reload):
	For flag_pic, handle pcrel_operand.

2013-08-02  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.c (epiphany_compute_frame_size):
	Move call to set_lr_slot_offset after the bulk of current_frame_info
	member initializations.

	* config/epiphany/epiphany.c (set_lr_slot_offset): For
	frame_offset_known case, fix assert and calculate appropriate
	lr_slot_offset.
	(epiphany_compute_frame_size): Avoid getting a split/unaligned trace.
	(epiphany_emit_save_restore): Don't worry about last_saved if
	reg_size is aligned.

	* config/epiphany/predicates.md (trace_operand): Verify that address
	is a PLUS or REG.

2013-08-01  Joern Rennecke <joern.rennecke@embecosm.com>

	* config/epiphany/epiphany.h (FIRST_PSEUDO_REGISTER): Bump up to 79.
	(FIXED_REGISTERS, CALL_USED_REGISTERS): Include TRACE_REGNUM entry.
	(REG_ALLOC_ORDER, REGISTER_NAMES): Likewise.
	(REG_CLASS_CONTEENTS) <ALL_REGS>: Likewise.
	* config/epiphany/epiphany.md (TRACE_REGNUM): New constant.
	(call, call_i, sibcall, sibcall_i): Add use of trace.
	(call_value, call_value_i, sibcall_value, sibcall_value_i): Likewise.
	(stack_adjust_addfp): New pattern.
	(stack_adjust_mov): Use new hard frame pointer register.
	* config/epiphany/predicates.md (trace_operand): New predicate.
	(float_operation): Allow for three-element CALL_INSN patterns.
	* config/epiphany/epiphany.c (epiphany_expand_prologue):
	Don't use frame_insn for hard frame pointer initialization when
	frame_pointer_needed is not set.
	Add a REG_FRAME_RELATED_NOTE when adding a register to allocate a
	large frame.
	(epiphany_expand_epilogue): Fix sign of frame_adjust.
	Use gen_stack_adjust_addfp.
	(epiphany_initial_elimination_offset): Define elimination from
	TRACE_REGNUM.
	(epiphany_can_eliminate): Only restrict elimination from
	TRACE_REGNUM.

	Backout these changes:
	* config/epiphany/epiphany.h (FIRST_PSEUDO_REGISTER): Bump up to 79.
	(FIXED_REGISTERS, CALL_USED_REGISTERS): Include TRACE_REGNUM entry.
	(REG_ALLOC_ORDER, REGISTER_NAMES): Likewise.
	(REG_CLASS_CONTEENTS) <ALL_REGS>: Likewise.
	* config/epiphany/epiphany.md (TRACE_REGNUM): New constant.
	(sibcall, sibcall_i): Add use of trace.
	(sibcall_value, sibcall_value_i): Likewise.
	* config/epiphany/epiphany.c (epiphany_initial_elimination_offset):
	Define elimination from TRACE_REGNUM.
	(epiphany_can_eliminate): Only restrict elimination from
	TRACE_REGNUM.

	* config/epiphany/epiphany-protos.h (epiphany_need_fp): Declare.
	* config/epiphany/epiphany.c (struct epiphany_frame_info):
	Change need_fp to bool.
	New member need_trace.
	(epiphany_compute_frame_size): Set / use need_trace member.
	Avoid GPR_LR in last_slot.
	(piphany_initial_elimination_offset): Handle elimination of
	HARD_FRAME_POINTER_REGNUM.
	(epiphany_can_eliminate): Likewise.
	* config/epiphany/epiphany.h (machine_function): Add member
	expanded_non_sibcall.
	(ELIMINABLE_REGS): Add entry for HARD_FRAME_POINTER_REGNUM.
	* config/epiphany/epiphany.md (reload_insi_ra): Use epiphany_need_fp.
	(call_i, call_value_i): Use (mem:BLK (reg:SI GPR_FP)) instead
	of TRACE_REGNUM.
	(call, call_value): Likewise.
	Set MACHINE_FUNCTION (cfun)->expanded_non_sibcall.
	* config/epiphany/predicates.md (trace_operand): Check for MEM.

2013-07-31  Joern Rennecke <joern.rennecke@embecosm.com>

	Overlay (-fpic) support:

	* config/epiphany/epiphany.h (ASM_OUTPUT_SYMBOL_REF): Define.
	#if 0 for now because assembler is not ready.

	* config/epiphany/epiphany.h (EPIPHANY_LIBRARY_EXTRA_SPEC): Add -fpic.
	* config/epiphany/epiphany.md (GPR_FP): Change to 15.
	* config/epiphany/epiphany.c (TARGET_CAN_ELIMINATE): Define.
	(struct epiphany_frame_info) <initialized>: Now bool.
	(struct epiphany_frame_info) <frame_offset_known, sft_hd_frame_offset>:
	New members.
	(set_lr_slot_offset): New static function.
	(MUST_SAVE_REGISTER): If frame_pointer_needed, Save GPR_FP.
	(MUST_SAVE_RETURN_ADDR): Delete usused macro.
	(epiphany_compute_frame_size): Compute new current_frame_info
	members.  Avoid un-pairing double word register save.
	Pad pretend args if that helps building a post-decrement.
	Remove small_slots overhang.
	Allow GPR_LR and GPR_FP to be paired up.
	Make sure first_offset allows fits into add range.
	(epiphany_emit_save_restore): Use set_lr_slot_offset.
	(epiphany_expand_prologue): Remove unsued variable save_config.
	Record LR slot offset when encounterd at first_slot.
	Use add to set hard frame pointer where necessary.
	(epiphany_initial_elimination_offset): Use
	current_frame_info.sft_hd_frame_offset.
	(epiphany_can_eliminate): New static function.

2013-07-30  Joern Rennecke <joern.rennecke@embecosm.com>

	PR rtl-optimization/58029
	* alias.c (base_alias_check): Allow for aliases between stack-
	and frame-pointer referenced memory.

